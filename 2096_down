#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,mini,maxi;
int min_dp[2][3];//윈도우 슬라이싱 배열(메모리 최적화)
int max_dp[2][3];
int score[3];

//점수
void play(int n){
    //초기 배열
    cin>>score[0]>>score[1]>>score[2];
    min_dp[0][0] = score[0];
    min_dp[0][1] = score[1];
    min_dp[0][2] = score[2];
    max_dp[0][0] = score[0];
    max_dp[0][1] = score[1];
    max_dp[0][2] = score[2];
    for(int i=1;i<n;i++){
        cin>>score[0]>>score[1]>>score[2];
        //점화식
        min_dp[1][0] = min(min_dp[0][0],min_dp[0][1])+score[0];
        min_dp[1][1] = min({min_dp[0][0],min_dp[0][1],min_dp[0][2]})+score[1];
        min_dp[1][2] = min(min_dp[0][1],min_dp[0][2])+score[2];
        max_dp[1][0] = max(max_dp[0][0],max_dp[0][1])+score[0];
        max_dp[1][1] = max({max_dp[0][0],max_dp[0][1],max_dp[0][2]})+score[1];
        max_dp[1][2] = max(max_dp[0][1],max_dp[0][2])+score[2];
        //슬라이딩 윈도우(1행에 있는 값들을 0행으로 옮김)
        min_dp[0][0] = min_dp[1][0];
        min_dp[0][1] = min_dp[1][1];
        min_dp[0][2] = min_dp[1][2];
        max_dp[0][0] = max_dp[1][0];
        max_dp[0][1] = max_dp[1][1];
        max_dp[0][2] = max_dp[1][2];
    }
    mini = min({min_dp[0][0],min_dp[0][1],min_dp[0][2]});
    maxi = max({max_dp[0][0],max_dp[0][1],max_dp[0][2]});
    //출력
    cout<<maxi<<" "<<mini;
}

int main(){
    cin.tie(0);
    cout.tie(0);
    
    cin>>n;
    play(n);
    return 0;
}
